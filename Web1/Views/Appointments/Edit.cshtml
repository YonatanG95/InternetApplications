@using Microsoft.AspNet.Identity;
@using Web1.Models;
@using Microsoft.AspNet.Identity.EntityFramework;
@model Web1.Models.Appointment

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Appointment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Date_Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date_Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date_Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAvaliable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsAvaliable)
                    @Html.ValidationMessageFor(model => model.IsAvaliable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Doctor_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Doctor_ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Doctor_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Patient_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    string cid = User.Identity.GetUserId();
                    UserManager<ApplicationUser> userManager = new UserManager<ApplicationUser>(new UserStore<ApplicationUser>(new ApplicationDbContext()));
                    var roles = userManager.GetRoles(cid);
                    if (roles[0] == "Doctor")
                    {
                        @Html.EditorFor(model => model.Patient_ID, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.DropDownListFor(model => model.Patient_ID, new SelectList(Model.patients, "Value", "Text"), new { htmlAttributes = new { @class = "form-control"} })*@
                        @Html.ValidationMessageFor(model => model.Patient_ID, "", new { @class = "text-danger" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Patient_ID, new { htmlAttributes = new { @class = "form-control", @Value = HttpContext.Current.User.Identity.GetUserId(), @readonly = "readonly" } })
                        @*@Html.DropDownListFor(model => model.Patient_ID, new SelectList(Model.patients, "Value", "Text"), new { htmlAttributes = new { @class = "form-control"} })*@
                        @Html.ValidationMessageFor(model => model.Patient_ID, "", new { @class = "text-danger" })
                    }
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
