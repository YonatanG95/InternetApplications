@model Web1.Models.Appointment

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Appointment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ID, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.Date_Time, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date_Time, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date_Time, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Date_Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date_Time, new { htmlAttributes = new { @class = "form-control", @id = "datetimepicker", @onBlur = "changed(this)" } })
                @Html.ValidationMessageFor(model => model.Date_Time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsAvaliable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsAvaliable)
                    @Html.ValidationMessageFor(model => model.IsAvaliable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Doctor_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Doctor_ID, new { htmlAttributes = new { @class = "form-control", @id = "doctorid" } })
                @*@Html.DropDownListFor(model => model.Doctor_ID, new SelectList(Model.Doctors, "Value", "Text"), new { htmlAttributes = new { @class = "form-control", @id = "doctorid" } })*@
                @Html.ValidationMessageFor(model => model.Doctor_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Patient_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Patient_ID, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.DropDownListFor(model => model.Patient_ID, new SelectList(Model.patients, "Value", "Text"), new { htmlAttributes = new { @class = "form-control"} })*@
                @Html.ValidationMessageFor(model => model.Patient_ID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" type="text/css" href="/datetimepicker/jquery.datetimepicker.css" />
    <script src="/datetimepicker/jquery.js"></script>
    <script src="/datetimepicker/build/jquery.datetimepicker.full.min.js"></script>
    <script>
        jQuery('#datetimepicker').datetimepicker({
            minTime: '08:00',
            maxTime: '18:00',
            disabledWeekDays: [5, 6]
        });
    </script>
    <script type="text/javascript">
        function changed(date) {
            var doctor = $('#doctorid');
            if (doctor.val() == null || doctor.val() == '') {
                $(date).val(null);
                alert('You have to put in the doctor before the date');
            }
            else {
                var url = '@Url.Action("CheckAvailableDate", "Appointments")';
                $.post(url, { doctorID: doctor.val(), datetime: $(date).val() }, function (data) {
                    if (data == 'booked') {
                        $(date).val(null);
                        alert('The Date is booked for this specific doctor, please choose another date');
                    }
                });
            }

            @*var datetime = $("#model.Date_Time").val();
            var doctorid = $('#doctorid');
            doctorid.empty();*@
        }
        @*jQuery.validator.addMethod("gregname", function (value, element) {
            return true;
        }, "* Amount must be greater than zero");
        $('#doctorid').validate({
            rules: {
                doctorid: {
                    gregname: true
                }
            }
        });*@
    </script>
    @*Date_Time
    Doctor_ID*@
}